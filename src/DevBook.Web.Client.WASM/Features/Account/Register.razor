@page "/Account/Register"

<div class="flex justify-center">
    <div class="flex flex-col">
        <EditForm Model="@_registrationForm" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <MudCard Class="m-4 w-[40rem]">
                <MudCardHeader>
                    <MudText Typo="Typo.h5">Register to DevBook</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField Label="Email" @bind-Value="_registrationForm.Email" For="@(() => _registrationForm.Email)" />
                    <MudTextField Label="Password" InputType="InputType.Password" @bind-Value="_registrationForm.Password" For="@(() => _registrationForm.Password)" />
                    @if (showRegistrationErrors)
                    {
                        <div class="pa-4">
                            @foreach (var error in registrationErrors)
                            {
                                <MudText Color="@Color.Error">@error</MudText>
                            }
                        </div>
                    }
                </MudCardContent>
                <MudCardActions>
                    <MudButton Disabled="@_processing" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">
                        @if (_processing)
                        {
                            <MudProgressCircular Class="mr-3" Size="Size.Small" Indeterminate="true" />
                        }
                        <MudText>Register</MudText>
                    </MudButton>
                </MudCardActions>
                <MudText Class="p-4 text-center">
                    Already have an account? <MudLink Href="account/login">Login now</MudLink>
                </MudText>
            </MudCard>
        </EditForm>

        @if (showRegistrationSuccess)
        {
            <MudCard Class="m-4 w-[40rem]">
                <MudCardContent>
                    <MudText Class="m-4 text-center">
                        <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Size="Size.Large" Color="Color.Success" Class="mr-1" />Registration was successful, you can now <MudLink Href="account/login">Login</MudLink>
                    </MudText>
                </MudCardContent>
            </MudCard>
        }
    </div>
</div>

@code {
    [Inject] IAccountManagement AccountManagement { get; init; } = null!;

    private readonly RegistrationForm _registrationForm = new();
    private bool _processing = false;

    bool showRegistrationSuccess;
    bool showRegistrationErrors;
    string[] registrationErrors = [];

    private async Task OnValidSubmit()
    {
        _processing = true;
        var result = await AccountManagement.RegisterAsync(_registrationForm.Email, _registrationForm.Password);
        result.Switch(
            success =>
            {
                showRegistrationErrors = false;
                showRegistrationSuccess = true;
            },
            apiError =>
            {
                registrationErrors = apiError.Errors;
                showRegistrationSuccess = false;
                showRegistrationErrors = true;
            }
        );
        _processing = false;
    }

    public record RegistrationForm
    {
        [Required(AllowEmptyStrings = false)]
        [EmailAddress]
        public string Email { get; set; } = string.Empty;

        [Required(AllowEmptyStrings = false)]
        public string Password { get; set; } = string.Empty;
    }
}