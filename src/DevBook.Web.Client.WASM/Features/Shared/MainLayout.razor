@inherits LayoutComponentBase

@* MudBlazor default components *@
<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkModeEnabled" />
<MudDialogProvider FullWidth="true" />
<MudSnackbarProvider />

<MudLayout>
	<MudAppBar Elevation="1">
		<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
			OnClick="MenuDrawerToggle" />
		<MudText Typo="Typo.h5" Class="ml-3">DevBook</MudText>
		<MudSpacer />
		<div>
			<AuthorizeView>
				<Authorized>
					<MudButton
						Variant="Variant.Outlined"
						Color="@(_isDarkModeEnabled ? Color.Primary : Color.Inherit)"
						Href="/account/logout">
						Logout
					</MudButton>
				</Authorized>
				<NotAuthorized>
					<MudButton
						Variant="Variant.Outlined"
						Color="@(_isDarkModeEnabled ? Color.Primary : Color.Inherit)"
						Href="/account/login">
						Login
					</MudButton>
				</NotAuthorized>
			</AuthorizeView>
			<MudTooltip Delay="_tooltipDelayInMs" Text="Toggle Dark Mode" Placement="Placement.Bottom">
				<MudIconButton
					Class='@(_isDarkModeEnabled ? "d-none" : "")'
					OnClick="ToggleTheme" Icon="@Icons.Material.Filled.DarkMode"
					Color="@(_isDarkModeEnabled ? Color.Primary : Color.Inherit)" />
			</MudTooltip>
			<MudTooltip Delay="_tooltipDelayInMs" Text="Toggle Light Mode" Placement="Placement.Bottom">
				<MudIconButton
					Class='@(_isDarkModeEnabled ? "" : "d-none")'
					OnClick="ToggleTheme" Icon="@Icons.Material.Filled.LightMode"
					Color="@(_isDarkModeEnabled ? Color.Primary : Color.Inherit)" />
			</MudTooltip>
		</div>
		
	</MudAppBar>
	<MudDrawer @bind-Open="_menuDrawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
		<NavMenu />
	</MudDrawer>
	<MudMainContent>
		<ErrorBoundary @ref="_errorBoundary">
			<ChildContent>
				@Body
			</ChildContent>
			<ErrorContent>
				<ErrorDialog Title="Uh oh. Something went wrong." ErrorMessage="@($"Error: {context.Message}")" />
			</ErrorContent>
		</ErrorBoundary>
	</MudMainContent>
</MudLayout>

@code {
	ErrorBoundary? _errorBoundary;
	private bool _menuDrawerOpen = true;
	private bool _isDarkModeEnabled;
	private MudThemeProvider _mudThemeProvider = default!;
	private double _tooltipDelayInMs = 600;

	protected override void OnParametersSet()
	{
		// On each page navigation, reset any error state
		_errorBoundary?.Recover();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			_isDarkModeEnabled = await _mudThemeProvider.GetSystemPreference();
			StateHasChanged();
		}
	}

	private void ToggleTheme()
	{
		_isDarkModeEnabled = !_isDarkModeEnabled;
	}

	private void MenuDrawerToggle()
	{
		_menuDrawerOpen = !_menuDrawerOpen;
	}
}