@page "/Projects/Create"

<PageTitle>Create Project</PageTitle>

<MudCard Class="m-4 max-w-screen-sm">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h5">
                <MudIconButton Icon="@Icons.Material.Filled.ArrowBackIosNew" Color="Color.Inherit" Href="/projects" />
                Create new Project
            </MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <EditForm Model="@_createProjectForm" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Name" @bind-Value="_createProjectForm.Name" For="@(() => _createProjectForm.Name)" />
                    <MudTextField Label="Details" Class="mt-3" @bind-Value="_createProjectForm.Details" For="@(() => _createProjectForm.Details)" />
                    <div class="flex space-x-6">
                        <MudTextField Label="Hourly rate" Class="mt-3" @bind-Value="_createProjectForm.HourlyRate" For="@(() => _createProjectForm.HourlyRate)" />
                        <MudTextField Label="Currency" Class="mt-3" @bind-Value="_createProjectForm.Currency" For="@(() => _createProjectForm.Currency)" />
                    </div>
                    <div class="flex items-end mt-2">
                        <div class="w-6 h-6 mr-2 mb-1 rounded-full" style="background: @(_createProjectForm.HexColor ?? "#adadb1")"></div>
                        <MudColorPicker
                            @bind-Text="_createProjectForm.HexColor"
                            Label="Color"
                            Adornment="Adornment.None"
                            PickerVariant="PickerVariant.Inline"
                            ColorPickerView="ColorPickerView.Palette">
                        </MudColorPicker>
                    </div>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Disabled="@_processing" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">
                        @if (_processing)
                        {
                            <MudProgressCircular Class="mr-3" Size="Size.Small" Indeterminate="true"/>
                        }
                        <MudText>Create</MudText>
                    </MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </MudCardContent>
</MudCard>

@code {
    [Inject] IDevBookWebApiGraphQLClient Client { get; set; } = null!;
    [Inject] private NavigationManager NavigationManager { get; init; } = null!;
    [Inject] ISnackbar Snackbar { get; set; } = null!;

    private readonly CreateProjectForm _createProjectForm = new() { Name = "New Project" };
    private bool _processing = false;

    private async Task OnValidSubmit()
    {
        _processing = true;
        var result = await Client.CreateProject.ExecuteAsync(
            new()
            {
                Name = _createProjectForm.Name,
                Details = _createProjectForm.Details,
                Currency = _createProjectForm.Currency,
                HourlyRate = _createProjectForm.HourlyRate,
                HexColor = _createProjectForm.HexColor
            });

        if (result.Errors.Any())
        {
            Snackbar.Add($"Cannot create project - {result.Errors.FirstOrDefault()?.Message ?? string.Empty}", Severity.Error);
            _processing = false;
        }
        else
        {
            NavigationManager.NavigateTo("/projects");
        }
    }

    private sealed record CreateProjectForm
    {
        [Required(AllowEmptyStrings = false)]
        public required string Name { get; set; }

        public string? Details { get; set; }
        public string? Currency { get; set; }
        public int? HourlyRate { get; set; }
        public string? HexColor { get; set; }
    }
}